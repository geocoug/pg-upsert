[project]
name = "pg-upsert"
dynamic = ["version"]
authors = [{ name = "Caleb Grant", email = "grantcaleb22@gmail.com" }]
description = "A Python library for upserting data into postgres."
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
    "psycopg2-binary>=2.9,<3",
    "tabulate>=0.9,<0.10",
    "pyyaml>=6.0.1,<7",
    "typer>=0.15,<0.16",
]
keywords = ["postgresql", "postgres", "dbms", "etl", "upsert", "database"]

[project.scripts]
pg-upsert = "pg_upsert.cli:app"

[tool.setuptools.dynamic]
version = { attr = "pg_upsert.__version__.__version__" }

[project.urls]
Homepage = "https://pg-upsert.readthedocs.io"
Repository = "https://github.com/geocoug/pg-upsert"
Issues = "https://github.com/geocoug/pg-upsert/issues"

[tool.pytest.ini_options]
addopts = ["--cov=pg_upsert", "--cov-report=term-missing"]
log_cli = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*cache*",
]
# The line length to use when enforcing long-lines violations (like E501).
line-length = 120
# Assume Python 3.11.
target-version = "py312"
# Whether to automatically exclude files that are ignored by .ignore, .gitignore, .git/info/exclude, and global gitignore files.
respect-gitignore = true
# Default autofix behavior
fix = false

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# A list of rule codes or prefixes to enable.
# Prefixes can specify exact rules (like F841), entire categories (like F), or anything in between.
# Default = Pyflakes `E` and `F` codes.
select = [
    "E",
    "F",
    "Q",
    "B",
    "I",
    "UP",
    "N",
    "S",
    "C4",
    "T20",
    "RET",
    "SIM",
    "PD",
    "RUF",
]
ignore = ["PD901", "S101", "F401", "SIM117", "F811", "UP031"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.bumpversion]
current_version = "1.5.0"
commit = true
commit_args = "--no-verify"
tag = true

[[tool.bumpversion.files]]
filename = "pg_upsert/__version__.py"
