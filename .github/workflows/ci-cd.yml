---
name: ci/cd

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  python-checks:
    name: Python Checks
    uses: geocoug/github-actions-templates/.github/workflows/python-checks.yml@main
    permissions:
      contents: read
    with:
      pytest: false

  docker-build:
    name: Docker Build+Push
    uses: geocoug/github-actions-templates/.github/workflows/docker-build.yml@main
    permissions:
      contents: read
      packages: write
      pull-requests: write
    with:
      ghcr-enable: true
      image-names: |
        ghcr.io/${{ github.repository }}
      tag-rules: |
        type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
        type=ref,event=pr
        type=ref,event=branch
        type=semver,pattern={{version}}
        type=raw,value=gha-${{ github.run_id }}
      platforms: linux/amd64,linux/arm64

  pypi-publish:
    name: PyPI Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install --upgrade build twine
          python -m build --sdist --wheel --outdir dist/
          python -m twine upload --skip-existing dist/*
